[{"title":"Hexo博客——不止于文字","date":"2018-04-29T03:08:56.000Z","path":"/posts/232c0b30/","text":"在文章中添加图片、音乐及视频 添加图片 首先更改_config.yml 中 post_asset_folder:true。当设置post_asset_folder为true参数后，在建立文件时，Hexo会自动建立一个与文章同名的文件夹，可以把与该文章相关的所有资源都放到这个文件夹，便于对每篇文章里的资源进行管理 在搭建的博客目录下打开Git bash ，执行: npm install https://github.com/CodeFalling/hexo-asset-image --save 完成安装后用Hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。 把图片放在文件夹下面。此时，就可以在文章中添加如下代码格式即可插入图片： ![图片描述](文件夹名/图片名称.jpg) 也可以在source文件夹中新建images文件夹，把所有图片统一放置在里面（可以删除新建文章时创建的文件夹），使用绝对路径插入图片： ![图片描述](/img/图片名称.jpg) 相对路径和绝对路径两种方法各有好处，根据个人习惯选择。 添加音乐比如网易云音乐（网页版），找到喜欢的歌曲，点击生成外链播放器，把里面的代码复制下来，直接粘贴到博文中即可： 添加视频将你需要放置的本地视频上传至视频网站，比如哔哩哔哩、优酷、腾讯视频等等，审核通过后，点击分享按钮，复制iframe代码到文章中你指定的位置即可： 例如哔哩哔哩：","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://Rainylo.github.io/tags/Hexo/"}]},{"title":"Hexo搭建个人博客","date":"2018-04-27T12:38:04.000Z","path":"/posts/ec7d7221/","text":"使用Hexo+Github搭建个人博客 写在教程之前 前两天自己试着使用Hexo搭建了一个博客，也即是你们现在所看到的，搭建过程中出现过很多很多错误，失败重做至少五次，也曾想过放弃，不过我还是头铁挺了过来(还是太笨了233)，期间参照许多教程甚至询问其他博主，才有了现在这个正式版1.0。 在此，我衷心的感谢所有给予过我帮助的人！ 搭建博客 在搭建博客前，需要用到Git和node.js环境，所以需要提前到官网下载好，选择相应的版本，安装过程自行百度参考相关教程即可。 在我自己查找教程的过程中，发现由于教程的时间不同，分为许多不同的版本，许多命令也都有差异，而我没有多余时间来特意整理这些命令（或许等以后有时间了我会更新）。因此，我只能厚着脸皮引用一个我个人认为比较好比较全面的教程： 使用Hexo+Github一步步搭建属于自己的博客（基础） 使用Hexo+Github一步步搭建属于自己的博客（进阶） Tips 强烈推荐Hexo官网，里面有很多解释，不用怕英文看不懂，现在大多浏览器右键里都有翻译选项吧。如果搭建过程中有错误请仔细对比教程或自行百度搜索问题。 推荐一下个人认为比较好用的文本编辑器：Sublime，代码阅读起来也舒服。 可以在Hexo主题更换你的Hexo主题，点击图片可以预览，点击主题名可以跳转到下载链接，跳转后点击绿色按钮Clone or download即可下载，下载之后不要直接关闭下载页面，下滑滚轮，一般主题下面都有主题作者的说明和教程，可以省去很多很多麻烦。 如果你有购买域名的话，可以绑定到你已绑定github的博客，用自己的域名来访问，详细可以参考百度教程。 使用Hexo搭建的博客发布文章时，需要用到支持Markdown语法的编辑器，推荐使用CSDN提供的编辑器：http://write.blog.csdn.net/mdeditor Hexo博客还支持许多其他功能，例如gitalk评论功能等，由于我也才入门，所以有需要的自行百度吧。 常用的hexo命令 hexo clean 清空生成目录（public） hexo g 生成网站文件 hexo s 打开本地服务 localhost:4000 hexo d 将文件部署到github page hexo new xxx 新建一篇文章xxx（文件名不宜太长） hexo new page xxx 新建一个页面xxx 写在最后 看到这篇文章中许多链接或百度的字眼，你们可能要吐槽我只会搬运而不会原创了，在此我只能说句实在抱歉，我并不想用我有限的时间来偷工减料地完成一篇很有意义的教程，我自己所学也很有限，我并不想误导大家，所以引用那些比较完善的教程资料。 也许有人会说我懒不知道复制粘贴吗？其实，粘贴复制也是考验技术的2333，因为等你接触到Markdown语法就知道了，虽然这语法不难，但也要花些时间。我这样引用也算是尊重一下其他人的劳动成果吧。 如有其他问题，欢迎在文章下面留言或者直接私聊我，我会尽力解答。","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://Rainylo.github.io/tags/Hexo/"}]},{"title":"页面点击效果","date":"2018-04-26T09:58:33.000Z","path":"/posts/5c2fafc7/","text":"实现页面点击桃心效果手机端也有特效哦 点击 love.js 将里面全部代码复制，之后在路径/themes/“主题名”/source/js下新建love.js，将刚才复制的代码粘贴进love.js，打开/themes/“主题名”/layout/script.ejs（不同主题文件名可能不同），打开后在末尾添加以下代码： &lt;script type=&quot;text/javascript&quot; src=&quot;/js/love.js&quot;&gt;&lt;/script&gt; 到此，教程差不多就结束了，如果不成功可能是script代码添加位置不对，动手多试试吧！这个就是我所使用的主题： tomotoes","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://Rainylo.github.io/tags/Hexo/"},{"name":"页面美化","slug":"页面美化","permalink":"http://Rainylo.github.io/tags/页面美化/"}]}]